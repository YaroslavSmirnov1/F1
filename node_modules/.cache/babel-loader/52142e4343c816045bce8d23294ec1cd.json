{"ast":null,"code":"var _jsxFileName = \"/home/pavel/WebstormProjects/F1_Weather/src/components/TablePage.tsx\";\nimport React from 'react';\nimport '../css/TablePage.css';\nimport HourDetail from \"./HourDetail\";\nimport DayDetail from \"./DayDetail\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TablePage(props) {\n  if (props.forecastData) {\n    if (props.typeData === '2_days') {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tableCont\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"contForecast\",\n          children: props.forecastData.hourly.map(hour => /*#__PURE__*/_jsxDEV(HourDetail, {\n            hour: hour\n          }, hour.dt, false, {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 71\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tableCont\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"contForecast\",\n          children: props.forecastData.daily.map(day => /*#__PURE__*/_jsxDEV(DayDetail, {\n            day: day\n          }, day.dt, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 69\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this);\n    }\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"foreCastGroup\",\n      children: \"Choice city for forecast!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_c = TablePage;\nexport default TablePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"TablePage\");","map":{"version":3,"sources":["/home/pavel/WebstormProjects/F1_Weather/src/components/TablePage.tsx"],"names":["React","HourDetail","DayDetail","TablePage","props","forecastData","typeData","hourly","map","hour","dt","daily","day"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,sBAAP;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA+B;AAC3B,MAAIA,KAAK,CAACC,YAAV,EAAwB;AACpB,QAAID,KAAK,CAACE,QAAN,KAAmB,QAAvB,EAAiC;AAC7B,0BACI;AAAK,QAAA,SAAS,EAAG,WAAjB;AAAA,+BACI;AAAK,UAAA,SAAS,EAAG,cAAjB;AAAA,oBACKF,KAAK,CAACC,YAAN,CAAmBE,MAAnB,CAA0BC,GAA1B,CAA+BC,IAAD,iBAAe,QAAC,UAAD;AAA0B,YAAA,IAAI,EAAEA;AAAhC,aAAiBA,IAAI,CAACC,EAAtB;AAAA;AAAA;AAAA;AAAA,kBAA7C;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ;AAOH,KARD,MAQO;AACH,0BACI;AAAK,QAAA,SAAS,EAAG,WAAjB;AAAA,+BACI;AAAK,UAAA,SAAS,EAAG,cAAjB;AAAA,oBACKN,KAAK,CAACC,YAAN,CAAmBM,KAAnB,CAAyBH,GAAzB,CAA8BI,GAAD,iBAAc,QAAC,SAAD;AAAwB,YAAA,GAAG,EAAEA;AAA7B,aAAgBA,GAAG,CAACF,EAApB;AAAA;AAAA;AAAA;AAAA,kBAA3C;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ;AAOH;AACJ,GAlBD,MAkBO;AACH,wBACI;AAAK,MAAA,SAAS,EAAG,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;AACJ;;KA1BQP,S;AA4BT,eAAeA,SAAf","sourcesContent":["import React from 'react';\r\nimport '../css/TablePage.css';\r\nimport HourDetail from \"./HourDetail\";\r\nimport DayDetail from \"./DayDetail\";\r\n\r\nfunction TablePage(props: any) {\r\n    if (props.forecastData) {\r\n        if (props.typeData === '2_days') {\r\n            return (\r\n                <div className = 'tableCont'>\r\n                    <div className = 'contForecast'>\r\n                        {props.forecastData.hourly.map((hour: any) => <HourDetail key={hour.dt} hour={hour}/>)}\r\n                    </div>\r\n                </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div className = 'tableCont'>\r\n                    <div className = 'contForecast'>\r\n                        {props.forecastData.daily.map((day: any) => <DayDetail key={day.dt} day={day}/>)}\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    } else {\r\n        return (\r\n            <div className = 'foreCastGroup'>\r\n                Choice city for forecast!\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TablePage;"]},"metadata":{},"sourceType":"module"}