{"ast":null,"code":"var _jsxFileName = \"/home/pavel/WebstormProjects/F1_Weather/src/components/Result.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport '../css/Result.css';\nimport ResultsByFilter from './ResultsByFilter';\nimport { Nav } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Result(props) {\n  _s();\n\n  let [resultType, setType] = React.useState('today');\n\n  function setChoiceResult(e) {\n    if (e === null || e === 'today') {\n      setType('today');\n    } else if (e === '2_days') {\n      setType('2_days');\n    } else {\n      setType('week');\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Nav, {\n      justify: true,\n      variant: \"tabs\",\n      defaultActiveKey: \"today\",\n      onSelect: setChoiceResult,\n      children: [/*#__PURE__*/_jsxDEV(Nav.Item, {\n        children: /*#__PURE__*/_jsxDEV(Nav.Link, {\n          eventKey: \"today\",\n          className: \"navLink\",\n          children: \"Now\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Nav.Item, {\n        children: /*#__PURE__*/_jsxDEV(Nav.Link, {\n          eventKey: \"2_days\",\n          className: \"navLink\",\n          children: \"Two days\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Nav.Item, {\n        children: /*#__PURE__*/_jsxDEV(Nav.Link, {\n          eventKey: \"week\",\n          className: \"navLink\",\n          children: \"Week\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ResultsByFilter, {\n      dataResult: props.currentWeather,\n      resultType: resultType\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Result, \"NAn1JRtHI8852IZLilpP+tU1qDI=\");\n\n_c = Result;\nexport default Result;\n\nvar _c;\n\n$RefreshReg$(_c, \"Result\");","map":{"version":3,"sources":["/home/pavel/WebstormProjects/F1_Weather/src/components/Result.tsx"],"names":["React","ResultsByFilter","Nav","Result","props","resultType","setType","useState","setChoiceResult","e","currentWeather"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,mBAAP;AAEA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,GAAT,QAAoB,iBAApB;;;AAGA,SAASC,MAAT,CAAgBC,KAAhB,EAA4B;AAAA;;AAExB,MAAI,CAACC,UAAD,EAAaC,OAAb,IAAwBN,KAAK,CAACO,QAAN,CAAe,OAAf,CAA5B;;AAEA,WAASC,eAAT,CAAyBC,CAAzB,EAA2C;AACvC,QAAIA,CAAC,KAAK,IAAN,IAAcA,CAAC,KAAK,OAAxB,EAAiC;AAC7BH,MAAAA,OAAO,CAAC,OAAD,CAAP;AACH,KAFD,MAEO,IAAIG,CAAC,KAAI,QAAT,EAAmB;AACtBH,MAAAA,OAAO,CAAC,QAAD,CAAP;AACH,KAFM,MAEA;AACHA,MAAAA,OAAO,CAAC,MAAD,CAAP;AACH;AACJ;;AAED,sBACI,QAAC,KAAD,CAAO,QAAP;AAAA,4BACI,QAAC,GAAD;AAAK,MAAA,OAAO,MAAZ;AAAa,MAAA,OAAO,EAAC,MAArB;AAA4B,MAAA,gBAAgB,EAAC,OAA7C;AAAqD,MAAA,QAAQ,EAAKE,eAAlE;AAAA,8BACI,QAAC,GAAD,CAAK,IAAL;AAAA,+BACI,QAAC,GAAD,CAAK,IAAL;AAAU,UAAA,QAAQ,EAAC,OAAnB;AAA2B,UAAA,SAAS,EAAC,SAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAII,QAAC,GAAD,CAAK,IAAL;AAAA,+BACI,QAAC,GAAD,CAAK,IAAL;AAAU,UAAA,QAAQ,EAAC,QAAnB;AAA4B,UAAA,SAAS,EAAC,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAJJ,eAOI,QAAC,GAAD,CAAK,IAAL;AAAA,+BACI,QAAC,GAAD,CAAK,IAAL;AAAU,UAAA,QAAQ,EAAC,MAAnB;AAA0B,UAAA,SAAS,EAAC,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAYI,QAAC,eAAD;AAAiB,MAAA,UAAU,EAAKJ,KAAK,CAACM,cAAtC;AAAuD,MAAA,UAAU,EAAKL;AAAtE;AAAA;AAAA;AAAA;AAAA,YAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH;;GA9BQF,M;;KAAAA,M;AAgCT,eAAeA,MAAf","sourcesContent":["import React from 'react';\r\nimport '../css/Result.css';\r\n\r\nimport ResultsByFilter from './ResultsByFilter';\r\nimport { Nav } from \"react-bootstrap\";\r\n\r\n\r\nfunction Result(props: any) {\r\n\r\n    let [resultType, setType] = React.useState('today');\r\n\r\n    function setChoiceResult(e: string | null) {\r\n        if (e === null || e === 'today') {\r\n            setType('today');\r\n        } else if (e ==='2_days') {\r\n            setType('2_days');\r\n        } else {\r\n            setType('week');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Nav justify variant=\"tabs\" defaultActiveKey=\"today\" onSelect = { setChoiceResult }>\r\n                <Nav.Item>\r\n                    <Nav.Link eventKey=\"today\" className='navLink'>Now</Nav.Link>\r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                    <Nav.Link eventKey=\"2_days\" className='navLink'>Two days</Nav.Link>\r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                    <Nav.Link eventKey=\"week\" className='navLink'>Week</Nav.Link>\r\n                </Nav.Item>\r\n            </Nav>\r\n            <ResultsByFilter dataResult = { props.currentWeather } resultType = { resultType }/>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default Result;"]},"metadata":{},"sourceType":"module"}